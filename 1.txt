#include <iostream>
using namespace std;

class complex {
    float x; // Real part
    float y; // Imaginary part

public:
    complex() : x(0), y(0) {} // Default constructor

    complex operator+(const complex& c) const;
    complex operator*(const complex& c) const;

    // Friend functions for input and output
    friend istream &operator>>(istream &input, complex &t) {
        input >> t.x >> t.y;
        return input; // Return the input stream
    }
    friend ostream &operator<<(ostream &output, const complex &t) {
        output << t.x << "+" << t.y << "i";
        return output; // Return the output stream
    }
};

// Overloaded addition operator
complex complex::operator+(const complex& c) const {
    complex temp;
    temp.x = x + c.x;
    temp.y = y + c.y;
    return temp;
}

// Overloaded multiplication operator
complex complex::operator*(const complex& c) const {
    complex temp;
    temp.x = x * c.x - y * c.y;
    temp.y = x * c.y + y * c.x;
    return temp;
}

int main() {
    complex c1, c2, c3, c4;

    cout << "Enter the first complex number (real and imaginary part): ";
    cin >> c1;
    cout << "Enter the second complex number (real and imaginary part): ";
    cin >> c2;

    c3 = c1 + c2;
    c4 = c1 * c2;

    cout << "First Complex Number: " << c1 << endl;
    cout << "Second Complex Number: " << c2 << endl;
    cout << "Sum: " << c3 << endl;
    cout << "Product: " << c4 << endl;

    return 0;
}
